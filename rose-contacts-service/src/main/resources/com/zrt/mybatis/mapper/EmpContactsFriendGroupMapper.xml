<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zrt.mybatis.mapper.EmpContactsFriendGroupMapper" >
  <resultMap id="BaseResultMap" type="com.zrt.mybatis.domain.EmpContactsFriendGroup" >
    <id column="friend_group_id" property="friendGroupId" jdbcType="VARCHAR" />
    <result column="tenant_id" property="tenantId" jdbcType="VARCHAR" />
    <result column="friend_group_name" property="friendGroupName" jdbcType="VARCHAR" />
    <result column="friend_group_type" property="friendGroupType" jdbcType="VARCHAR" />
    <result column="member_quantity" property="memberQuantity" jdbcType="VARCHAR" />
    <result column="friend_group_status" property="friendGroupStatus" jdbcType="CHAR" />
    <result column="create_emp_id" property="createEmpId" jdbcType="VARCHAR" />
    <result column="create_date_time" property="createDateTime" jdbcType="CHAR" />
    <result column="update_date_time" property="updateDateTime" jdbcType="CHAR" />
    <result column="friend_group_head_photo" property="friendGroupHeadPhoto" jdbcType="VARCHAR" />
    <result column="friend_group_desc" property="friendGroupDesc" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.zrt.mybatis.domain.EmpContactsFriendGroup" extends="BaseResultMap" >
    <result column="visible_emps" property="visibleEmps" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    friend_group_id, tenant_id, friend_group_name, friend_group_type, member_quantity, 
    friend_group_status, create_emp_id, create_date_time, update_date_time, friend_group_head_photo, 
    friend_group_desc
  </sql>
  <sql id="Blob_Column_List" >
    visible_emps
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.zrt.mybatis.domain.EmpContactsFriendGroupExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from emp_contacts_friend_group
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zrt.mybatis.domain.EmpContactsFriendGroupExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from emp_contacts_friend_group
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from emp_contacts_friend_group
    where friend_group_id = #{friendGroupId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from emp_contacts_friend_group
    where friend_group_id = #{friendGroupId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.zrt.mybatis.domain.EmpContactsFriendGroupExample" >
    delete from emp_contacts_friend_group
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zrt.mybatis.domain.EmpContactsFriendGroup" >
    insert into emp_contacts_friend_group (friend_group_id, tenant_id, friend_group_name, 
      friend_group_type, member_quantity, friend_group_status, 
      create_emp_id, create_date_time, update_date_time, 
      friend_group_head_photo, friend_group_desc, 
      visible_emps)
    values (#{friendGroupId,jdbcType=VARCHAR}, #{tenantId,jdbcType=VARCHAR}, #{friendGroupName,jdbcType=VARCHAR}, 
      #{friendGroupType,jdbcType=VARCHAR}, #{memberQuantity,jdbcType=VARCHAR}, #{friendGroupStatus,jdbcType=CHAR}, 
      #{createEmpId,jdbcType=VARCHAR}, #{createDateTime,jdbcType=CHAR}, #{updateDateTime,jdbcType=CHAR}, 
      #{friendGroupHeadPhoto,jdbcType=VARCHAR}, #{friendGroupDesc,jdbcType=VARCHAR}, 
      #{visibleEmps,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zrt.mybatis.domain.EmpContactsFriendGroup" >
    insert into emp_contacts_friend_group
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="friendGroupId != null" >
        friend_group_id,
      </if>
      <if test="tenantId != null" >
        tenant_id,
      </if>
      <if test="friendGroupName != null" >
        friend_group_name,
      </if>
      <if test="friendGroupType != null" >
        friend_group_type,
      </if>
      <if test="memberQuantity != null" >
        member_quantity,
      </if>
      <if test="friendGroupStatus != null" >
        friend_group_status,
      </if>
      <if test="createEmpId != null" >
        create_emp_id,
      </if>
      <if test="createDateTime != null" >
        create_date_time,
      </if>
      <if test="updateDateTime != null" >
        update_date_time,
      </if>
      <if test="friendGroupHeadPhoto != null" >
        friend_group_head_photo,
      </if>
      <if test="friendGroupDesc != null" >
        friend_group_desc,
      </if>
      <if test="visibleEmps != null" >
        visible_emps,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="friendGroupId != null" >
        #{friendGroupId,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null" >
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="friendGroupName != null" >
        #{friendGroupName,jdbcType=VARCHAR},
      </if>
      <if test="friendGroupType != null" >
        #{friendGroupType,jdbcType=VARCHAR},
      </if>
      <if test="memberQuantity != null" >
        #{memberQuantity,jdbcType=VARCHAR},
      </if>
      <if test="friendGroupStatus != null" >
        #{friendGroupStatus,jdbcType=CHAR},
      </if>
      <if test="createEmpId != null" >
        #{createEmpId,jdbcType=VARCHAR},
      </if>
      <if test="createDateTime != null" >
        #{createDateTime,jdbcType=CHAR},
      </if>
      <if test="updateDateTime != null" >
        #{updateDateTime,jdbcType=CHAR},
      </if>
      <if test="friendGroupHeadPhoto != null" >
        #{friendGroupHeadPhoto,jdbcType=VARCHAR},
      </if>
      <if test="friendGroupDesc != null" >
        #{friendGroupDesc,jdbcType=VARCHAR},
      </if>
      <if test="visibleEmps != null" >
        #{visibleEmps,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zrt.mybatis.domain.EmpContactsFriendGroupExample" resultType="java.lang.Integer" >
    select count(*) from emp_contacts_friend_group
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update emp_contacts_friend_group
    <set >
      <if test="record.friendGroupId != null" >
        friend_group_id = #{record.friendGroupId,jdbcType=VARCHAR},
      </if>
      <if test="record.tenantId != null" >
        tenant_id = #{record.tenantId,jdbcType=VARCHAR},
      </if>
      <if test="record.friendGroupName != null" >
        friend_group_name = #{record.friendGroupName,jdbcType=VARCHAR},
      </if>
      <if test="record.friendGroupType != null" >
        friend_group_type = #{record.friendGroupType,jdbcType=VARCHAR},
      </if>
      <if test="record.memberQuantity != null" >
        member_quantity = #{record.memberQuantity,jdbcType=VARCHAR},
      </if>
      <if test="record.friendGroupStatus != null" >
        friend_group_status = #{record.friendGroupStatus,jdbcType=CHAR},
      </if>
      <if test="record.createEmpId != null" >
        create_emp_id = #{record.createEmpId,jdbcType=VARCHAR},
      </if>
      <if test="record.createDateTime != null" >
        create_date_time = #{record.createDateTime,jdbcType=CHAR},
      </if>
      <if test="record.updateDateTime != null" >
        update_date_time = #{record.updateDateTime,jdbcType=CHAR},
      </if>
      <if test="record.friendGroupHeadPhoto != null" >
        friend_group_head_photo = #{record.friendGroupHeadPhoto,jdbcType=VARCHAR},
      </if>
      <if test="record.friendGroupDesc != null" >
        friend_group_desc = #{record.friendGroupDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.visibleEmps != null" >
        visible_emps = #{record.visibleEmps,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update emp_contacts_friend_group
    set friend_group_id = #{record.friendGroupId,jdbcType=VARCHAR},
      tenant_id = #{record.tenantId,jdbcType=VARCHAR},
      friend_group_name = #{record.friendGroupName,jdbcType=VARCHAR},
      friend_group_type = #{record.friendGroupType,jdbcType=VARCHAR},
      member_quantity = #{record.memberQuantity,jdbcType=VARCHAR},
      friend_group_status = #{record.friendGroupStatus,jdbcType=CHAR},
      create_emp_id = #{record.createEmpId,jdbcType=VARCHAR},
      create_date_time = #{record.createDateTime,jdbcType=CHAR},
      update_date_time = #{record.updateDateTime,jdbcType=CHAR},
      friend_group_head_photo = #{record.friendGroupHeadPhoto,jdbcType=VARCHAR},
      friend_group_desc = #{record.friendGroupDesc,jdbcType=VARCHAR},
      visible_emps = #{record.visibleEmps,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update emp_contacts_friend_group
    set friend_group_id = #{record.friendGroupId,jdbcType=VARCHAR},
      tenant_id = #{record.tenantId,jdbcType=VARCHAR},
      friend_group_name = #{record.friendGroupName,jdbcType=VARCHAR},
      friend_group_type = #{record.friendGroupType,jdbcType=VARCHAR},
      member_quantity = #{record.memberQuantity,jdbcType=VARCHAR},
      friend_group_status = #{record.friendGroupStatus,jdbcType=CHAR},
      create_emp_id = #{record.createEmpId,jdbcType=VARCHAR},
      create_date_time = #{record.createDateTime,jdbcType=CHAR},
      update_date_time = #{record.updateDateTime,jdbcType=CHAR},
      friend_group_head_photo = #{record.friendGroupHeadPhoto,jdbcType=VARCHAR},
      friend_group_desc = #{record.friendGroupDesc,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zrt.mybatis.domain.EmpContactsFriendGroup" >
    update emp_contacts_friend_group
    <set >
      <if test="tenantId != null" >
        tenant_id = #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="friendGroupName != null" >
        friend_group_name = #{friendGroupName,jdbcType=VARCHAR},
      </if>
      <if test="friendGroupType != null" >
        friend_group_type = #{friendGroupType,jdbcType=VARCHAR},
      </if>
      <if test="memberQuantity != null" >
        member_quantity = #{memberQuantity,jdbcType=VARCHAR},
      </if>
      <if test="friendGroupStatus != null" >
        friend_group_status = #{friendGroupStatus,jdbcType=CHAR},
      </if>
      <if test="createEmpId != null" >
        create_emp_id = #{createEmpId,jdbcType=VARCHAR},
      </if>
      <if test="createDateTime != null" >
        create_date_time = #{createDateTime,jdbcType=CHAR},
      </if>
      <if test="updateDateTime != null" >
        update_date_time = #{updateDateTime,jdbcType=CHAR},
      </if>
      <if test="friendGroupHeadPhoto != null" >
        friend_group_head_photo = #{friendGroupHeadPhoto,jdbcType=VARCHAR},
      </if>
      <if test="friendGroupDesc != null" >
        friend_group_desc = #{friendGroupDesc,jdbcType=VARCHAR},
      </if>
      <if test="visibleEmps != null" >
        visible_emps = #{visibleEmps,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where friend_group_id = #{friendGroupId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.zrt.mybatis.domain.EmpContactsFriendGroup" >
    update emp_contacts_friend_group
    set tenant_id = #{tenantId,jdbcType=VARCHAR},
      friend_group_name = #{friendGroupName,jdbcType=VARCHAR},
      friend_group_type = #{friendGroupType,jdbcType=VARCHAR},
      member_quantity = #{memberQuantity,jdbcType=VARCHAR},
      friend_group_status = #{friendGroupStatus,jdbcType=CHAR},
      create_emp_id = #{createEmpId,jdbcType=VARCHAR},
      create_date_time = #{createDateTime,jdbcType=CHAR},
      update_date_time = #{updateDateTime,jdbcType=CHAR},
      friend_group_head_photo = #{friendGroupHeadPhoto,jdbcType=VARCHAR},
      friend_group_desc = #{friendGroupDesc,jdbcType=VARCHAR},
      visible_emps = #{visibleEmps,jdbcType=LONGVARCHAR}
    where friend_group_id = #{friendGroupId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zrt.mybatis.domain.EmpContactsFriendGroup" >
    update emp_contacts_friend_group
    set tenant_id = #{tenantId,jdbcType=VARCHAR},
      friend_group_name = #{friendGroupName,jdbcType=VARCHAR},
      friend_group_type = #{friendGroupType,jdbcType=VARCHAR},
      member_quantity = #{memberQuantity,jdbcType=VARCHAR},
      friend_group_status = #{friendGroupStatus,jdbcType=CHAR},
      create_emp_id = #{createEmpId,jdbcType=VARCHAR},
      create_date_time = #{createDateTime,jdbcType=CHAR},
      update_date_time = #{updateDateTime,jdbcType=CHAR},
      friend_group_head_photo = #{friendGroupHeadPhoto,jdbcType=VARCHAR},
      friend_group_desc = #{friendGroupDesc,jdbcType=VARCHAR}
    where friend_group_id = #{friendGroupId,jdbcType=VARCHAR}
  </update>
</mapper>