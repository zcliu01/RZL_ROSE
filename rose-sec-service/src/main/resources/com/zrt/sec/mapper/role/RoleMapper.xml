<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zrt.sec.mapper.role.RoleMapper">
	<!--用户角色列表信息查询 -->
	<select id="userRoleList" resultType="java.util.HashMap">
		select r.role_id,
		r.role_name, r.sec_order, r.sec_enabled, r.sec_sys_flag,
		r.sec_readonly_flag, r.create_date_time, r.update_date_time
		from
		sys_sec_role r,
		sys_sec_user_role ur
		where ur.role_id = r.role_id
		and ur.emp_id =#{emp_id}
		and r.sec_enabled='1'
		order by r.sec_order DESC, r.create_date_time DESC
	</select>
	<!--批量插入用户角色 -->
	<insert id="userRoleSave" parameterType="java.util.List">
		insert into sys_sec_user_role (emp_id, role_id,group_code)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.emp_id,jdbcType=VARCHAR},
			#{item.role_id,jdbcType=VARCHAR},#{item.group_code,jdbcType=VARCHAR})
		</foreach>
	</insert>
	<!--查询角色绑定的功能 -->
	<select id="roleResourceList" resultType="java.util.HashMap">
		SELECT
		ssr.resource_id,ssr.resource_url,ssr.menu_code,ssr.resource_name,ssm.menu_code,ssm.menu_level,ssm.menu_name,ssm.menu_url,ssm.parent_code,ssm.root_menu_code
		FROM sys_sec_role r,
		sys_sec_role_resource ssrr,
		sys_sec_resource ssr,
		sys_sec_menu ssm
		WHERE r.role_id=ssrr.role_id
		AND
		ssr.resource_id=ssrr.resource_id
		AND ssr.menu_code=ssm.menu_code
		AND
		r.role_id=#{role_id}
		and ssr.resource_group=#{root_menu_code}
		AND
		ssr.sec_enabled='1'
		AND ssm.sec_enabled='1'
		ORDER BY ssr.menu_code
	</select>
	<!--查询角色绑定的菜单 (只查菜单20171222修改)-->
	<select id="roleMenuNewList" resultType="java.util.HashMap">
		SELECT
			ssm.menu_code,ssm.menu_name
		FROM
			sys_sec_menu ssm
		JOIN sys_sec_role_menu ssrm ON ssm.menu_code = ssrm.menu_code
		WHERE
			ssrm.role_id = #{role_id}
			AND ssm.root_menu_code=#{root_menu_code}
		ORDER BY ssm.menu_code
	</select>
	<!--查询角色绑定的菜单下的按钮资源20180113-->
	<select id="roleMenuRsList" resultType="java.util.HashMap">
		SELECT
			ssr.resource_id,ssr.resource_name
		FROM
			sys_sec_resource ssr
		JOIN sys_sec_role_resource ssrr ON ssr.resource_id = ssrr.resource_id
		WHERE
			ssrr.role_id = #{role_id}
			AND ssr.menu_code IN (
			SELECT
				menu_code
			FROM
				sys_sec_menu ssm
			WHERE
				ssm.root_menu_code = #{root_menu_code}
		)
		ORDER BY ssr.resource_id
	</select>
	<!--批量插入角色资源 -->
	<insert id="roleResourceSave" parameterType="java.util.List">
		insert into sys_sec_role_resource (role_id, resource_id,resource_mode)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.role_id,jdbcType=VARCHAR},
			#{item.resource_id,jdbcType=VARCHAR},#{item.resource_mode,jdbcType=CHAR})
		</foreach>
	</insert>
	<!--批量插入角色菜单表(只插入菜单20171222修改) -->
	<insert id="roleMenuSave" parameterType="java.util.List">
		insert into sys_sec_role_menu (role_id, menu_code)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.role_id,jdbcType=VARCHAR},
			#{item.menu_code,jdbcType=VARCHAR})
		</foreach>
	</insert>
	<!--批量插入角色资源表20180113 -->
	<insert id="roleRsSave" parameterType="java.util.List">
		insert into sys_sec_role_resource (role_id,resource_id, menu_code)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.role_id,jdbcType=VARCHAR},
			#{item.resource_id,jdbcType=VARCHAR},
			#{item.menu_code,jdbcType=VARCHAR})
		</foreach>
	</insert>
	<!--角色拥有的角色菜单 -->
	<select id="roleMenuList" resultType="java.util.HashMap">
		SELECT DISTINCT
		menu_code
		FROM
		sys_sec_role_resource ssrr,
		sys_sec_resource ssr
		WHERE ssrr.resource_id = ssr.resource_id
		AND ssrr.role_id = #{role_id}
	</select>

	<!--根据角色查询用户信息 -->
	<select id="roleUserList" resultType="java.util.HashMap">
		SELECT
		emp.emp_code,emp.emp_id,r.role_id,
		a.org_name,
		emp.emp_name,
		spp.p_name,
		emp.create_date_time,
		emp.entry_time,
		emp.emp_sex
		FROM
		sys_sec_role r,
		sys_sec_org a,
		sys_sec_emp emp,
		sys_sec_emp_position sep,
		sys_plat_position spp,
		sys_sec_user_role ur
		WHERE a.org_id = sep.org_id
		AND emp.emp_id=sep.emp_id
		AND sep.emp_position_id = spp.p_s_p_id
		AND ur.emp_id = emp.emp_id
		AND ur.role_id = r.role_id
		AND r.role_id = #{role_id} and sep.is_first_org='1'
		<if test="emp_name!=null and emp_name!=''">
			and emp.emp_name like CONCAT('%',#{emp_name},'%')
		</if>
		<if test="org_name!=null and org_name!=''">
			and a.org_name like CONCAT('%',#{org_name},'%')
		</if>
		<if test="org_id!=null and org_id!=''">
			and a.org_id = #{org_id}
		</if>
		<if test="emp_code!=null and emp_code!=''">
			and emp.emp_code like CONCAT('%',#{emp_code},'%')
		</if>
		<if test="emp_position_name!=null and emp_position_name!=''">
			and spp.p_name like CONCAT('%',#{emp_position_name},'%')
		</if>
		<if test="emp_email!=null and emp_email!=''">
			and emp.emp_email = #{emp_email}
		</if>
		<if test="emp_mobile!=null and emp_mobile!=''">
			and (emp.emp_phone like CONCAT('%',#{emp_mobile},'%') or
			emp.emp_mobile_phone like CONCAT('%',#{emp_mobile},'%') )
		</if>
		<if test="emp_work_address!=null and emp_work_address!=''">
			and emp.emp_work_address like #{emp_work_address}
		</if>
		<if test="emp_sex!=null and emp_sex!=''">
			and emp.emp_sex = #{emp_sex}
		</if>
		<if test="begin_entry_time!=null and begin_entry_time!=''">
		<![CDATA[and emp.entry_time >= #{begin_entry_time}]]>
		</if>
		<if test="end_entry_time!=null and end_entry_time!=''">
		<![CDATA[and emp.entry_time <= #{end_entry_time}]]>
		</if>
		<if test="begin_create_date_time!=null and begin_create_date_time!=''">
		<![CDATA[and emp.create_date_time >= #{begin_create_date_time}]]>
		</if>
		<if test="end_create_date_time!=null and end_create_date_time!=''">
		<![CDATA[and emp.create_date_time <= #{end_create_date_time}]]>
		</if>
		<if test="f_join_start_time != null and f_join_start_time !=''">
		<![CDATA[and emp.create_date_time >= #{f_join_start_time}]]>
		</if>
		<if test="f_join_end_time != null and f_join_end_time !=''">
		<![CDATA[and emp.create_date_time <= #{f_join_end_time}]]>
		</if>

	</select>

	<delete id="deleteRoleResource">

		delete from sys_sec_role_resource where role_id=#{role_id} and resource_id
		in(select resource_id from sys_sec_resource where
		resource_group=#{root_menu_code})

	</delete>
	<delete id="deleteRoleMenu">

		DELETE FROM sys_sec_role_menu where role_id=#{role_id} AND menu_code IN (
			SELECT
				menu_code
			FROM
				sys_sec_menu ssm
			WHERE
				ssm.root_menu_code = #{root_menu_code}
		)

	</delete>
	<delete id="deleteRoleRs">

		DELETE FROM sys_sec_role_resource where role_id=#{role_id} AND menu_code IN (
			SELECT
				menu_code
			FROM
				sys_sec_menu ssm
			WHERE
				ssm.root_menu_code = #{root_menu_code}
		)

	</delete>
</mapper>