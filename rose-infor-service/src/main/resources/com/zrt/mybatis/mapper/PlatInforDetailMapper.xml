<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zrt.mybatis.mapper.PlatInforDetailMapper" >
	<resultMap id="BaseResultMap" type="com.zrt.mybatis.domain.PlatInforDetail" >
		<id column="detail_id" property="detailId" jdbcType="INTEGER" />
		<result column="in_id" property="inId" jdbcType="INTEGER" />
		<result column="status" property="status" jdbcType="VARCHAR" />
		<result column="note" property="note" jdbcType="VARCHAR" />
		<result column="create_id" property="createId" jdbcType="VARCHAR" />
		<result column="create_date_time" property="createDateTime" jdbcType="CHAR" />
	</resultMap>
	<sql id="Example_Where_Clause" >
		<where >
			<foreach collection="oredCriteria" item="criteria" separator="or" >
				<if test="criteria.valid" >
					<trim prefix="(" suffix=")" prefixOverrides="and" >
						<foreach collection="criteria.criteria" item="criterion" >
							<choose >
								<when test="criterion.noValue" >
                  and ${criterion.condition}
								</when>
								<when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue" >
                  and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause" >
		<where >
			<foreach collection="example.oredCriteria" item="criteria" separator="or" >
				<if test="criteria.valid" >
					<trim prefix="(" suffix=")" prefixOverrides="and" >
						<foreach collection="criteria.criteria" item="criterion" >
							<choose >
								<when test="criterion.noValue" >
                  and ${criterion.condition}
								</when>
								<when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue" >
                  and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List" >
    detail_id, in_id, status, note, create_id, create_date_time
	</sql>
	<select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zrt.mybatis.domain.PlatInforDetailExample" >
    select
		<if test="distinct" >
      distinct
		</if>
    'true' as QUERYID,
		<include refid="Base_Column_List" />
    from plat_infor_detail
		<if test="_parameter != null" >
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null" >
      order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
		<include refid="Base_Column_List" />
    from plat_infor_detail
    where detail_id = #{detailId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from plat_infor_detail
    where detail_id = #{detailId,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.zrt.mybatis.domain.PlatInforDetailExample" >
    delete from plat_infor_detail
		<if test="_parameter != null" >
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.zrt.mybatis.domain.PlatInforDetail" >
   <selectKey keyProperty="detailId" order="AFTER" resultType="java.lang.Integer">  
            SELECT LAST_INSERT_id()  
		</selectKey>  
   
    insert into plat_infor_detail ( in_id, status, 
      note, create_id, create_date_time
      )
    values ( #{inId,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR}, #{createId,jdbcType=VARCHAR}, #{createDateTime,jdbcType=CHAR}
      )
	</insert>
	<insert id="insertSelective" parameterType="com.zrt.mybatis.domain.PlatInforDetail" >
		<selectKey keyProperty="detailId" order="AFTER" resultType="java.lang.Integer">  
            SELECT LAST_INSERT_id()  
		</selectKey>  
   
    insert into plat_infor_detail
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="inId != null" >
        in_id,
			</if>
			<if test="status != null" >
        status,
			</if>
			<if test="note != null" >
        note,
			</if>
			<if test="createId != null" >
        create_id,
			</if>
			<if test="createDateTime != null" >
        create_date_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="inId != null" >
        #{inId,jdbcType=INTEGER},
			</if>
			<if test="status != null" >
        #{status,jdbcType=VARCHAR},
			</if>
			<if test="note != null" >
        #{note,jdbcType=VARCHAR},
			</if>
			<if test="createId != null" >
        #{createId,jdbcType=VARCHAR},
			</if>
			<if test="createDateTime != null" >
        #{createDateTime,jdbcType=CHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.zrt.mybatis.domain.PlatInforDetailExample" resultType="java.lang.Integer" >
    select count(*) from plat_infor_detail
		<if test="_parameter != null" >
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map" >
    update plat_infor_detail
		<set >
			<if test="record.detailId != null" >
        detail_id = #{record.detailId,jdbcType=INTEGER},
			</if>
			<if test="record.inId != null" >
        in_id = #{record.inId,jdbcType=INTEGER},
			</if>
			<if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
			</if>
			<if test="record.note != null" >
        note = #{record.note,jdbcType=VARCHAR},
			</if>
			<if test="record.createId != null" >
        create_id = #{record.createId,jdbcType=VARCHAR},
			</if>
			<if test="record.createDateTime != null" >
        create_date_time = #{record.createDateTime,jdbcType=CHAR},
			</if>
		</set>
		<if test="_parameter != null" >
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map" >
    update plat_infor_detail
    set detail_id = #{record.detailId,jdbcType=INTEGER},
      in_id = #{record.inId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR},
      create_id = #{record.createId,jdbcType=VARCHAR},
      create_date_time = #{record.createDateTime,jdbcType=CHAR}
		<if test="_parameter != null" >
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.zrt.mybatis.domain.PlatInforDetail" >
    update plat_infor_detail
		<set >
			<if test="inId != null" >
        in_id = #{inId,jdbcType=INTEGER},
			</if>
			<if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
			</if>
			<if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
			</if>
			<if test="createId != null" >
        create_id = #{createId,jdbcType=VARCHAR},
			</if>
			<if test="createDateTime != null" >
        create_date_time = #{createDateTime,jdbcType=CHAR},
			</if>
		</set>
    where detail_id = #{detailId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.zrt.mybatis.domain.PlatInforDetail" >
    update plat_infor_detail
    set in_id = #{inId,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      create_id = #{createId,jdbcType=VARCHAR},
      create_date_time = #{createDateTime,jdbcType=CHAR}
    where detail_id = #{detailId,jdbcType=INTEGER}
	</update>
</mapper>